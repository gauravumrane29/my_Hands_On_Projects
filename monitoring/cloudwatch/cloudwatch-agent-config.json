{
  "agent": {
    "metrics_collection_interval": 60,
    "run_as_user": "cwagent",
    "region": "us-east-1",
    "debug": false
  },
  "metrics": {
    "namespace": "DevOps/JavaMicroservice",
    "append_dimensions": {
      "AutoScalingGroupName": "${aws:AutoScalingGroupName}",
      "ImageId": "${aws:ImageId}",
      "InstanceId": "${aws:InstanceId}",
      "InstanceType": "${aws:InstanceType}",
      "Environment": "${ENVIRONMENT}"
    },
    "aggregation_dimensions": [
      ["InstanceId"],
      ["InstanceType"],
      ["AutoScalingGroupName"],
      ["Environment"]
    ],
    "metrics_collected": {
      "cpu": {
        "measurement": [
          {
            "name": "cpu_usage_idle",
            "rename": "CPU_USAGE_IDLE",
            "unit": "Percent"
          },
          {
            "name": "cpu_usage_iowait",
            "rename": "CPU_USAGE_IOWAIT",
            "unit": "Percent"
          },
          {
            "name": "cpu_usage_user",
            "rename": "CPU_USAGE_USER",
            "unit": "Percent"
          },
          {
            "name": "cpu_usage_system",
            "rename": "CPU_USAGE_SYSTEM",
            "unit": "Percent"
          },
          {
            "name": "cpu_usage_active",
            "rename": "CPU_USAGE_ACTIVE",
            "unit": "Percent"
          }
        ],
        "metrics_collection_interval": 60,
        "resources": ["*"],
        "totalcpu": true
      },
      "disk": {
        "measurement": [
          {
            "name": "used_percent",
            "rename": "DISK_USED_PERCENT",
            "unit": "Percent"
          },
          {
            "name": "inodes_free",
            "rename": "DISK_INODES_FREE",
            "unit": "Count"
          }
        ],
        "metrics_collection_interval": 60,
        "resources": ["*"]
      },
      "diskio": {
        "measurement": [
          {
            "name": "io_time",
            "rename": "DISKIO_IO_TIME",
            "unit": "Milliseconds"
          },
          {
            "name": "read_bytes",
            "rename": "DISKIO_READ_BYTES",
            "unit": "Bytes"
          },
          {
            "name": "write_bytes",
            "rename": "DISKIO_WRITE_BYTES",
            "unit": "Bytes"
          },
          {
            "name": "reads",
            "rename": "DISKIO_READS",
            "unit": "Count"
          },
          {
            "name": "writes",
            "rename": "DISKIO_WRITES",
            "unit": "Count"
          }
        ],
        "metrics_collection_interval": 60,
        "resources": ["*"]
      },
      "mem": {
        "measurement": [
          {
            "name": "mem_used_percent",
            "rename": "MEM_USED_PERCENT",
            "unit": "Percent"
          },
          {
            "name": "mem_available_percent",
            "rename": "MEM_AVAILABLE_PERCENT",
            "unit": "Percent"
          },
          {
            "name": "mem_used",
            "rename": "MEM_USED",
            "unit": "Bytes"
          },
          {
            "name": "mem_cached",
            "rename": "MEM_CACHED",
            "unit": "Bytes"
          }
        ],
        "metrics_collection_interval": 60
      },
      "netstat": {
        "measurement": [
          {
            "name": "tcp_established",
            "rename": "NETSTAT_TCP_ESTABLISHED",
            "unit": "Count"
          },
          {
            "name": "tcp_time_wait",
            "rename": "NETSTAT_TCP_TIME_WAIT",
            "unit": "Count"
          }
        ],
        "metrics_collection_interval": 60
      },
      "net": {
        "measurement": [
          {
            "name": "bytes_sent",
            "rename": "NET_BYTES_SENT",
            "unit": "Bytes"
          },
          {
            "name": "bytes_recv",
            "rename": "NET_BYTES_RECEIVED",
            "unit": "Bytes"
          },
          {
            "name": "packets_sent",
            "rename": "NET_PACKETS_SENT",
            "unit": "Count"
          },
          {
            "name": "packets_recv",
            "rename": "NET_PACKETS_RECEIVED",
            "unit": "Count"
          }
        ],
        "metrics_collection_interval": 60,
        "resources": ["*"]
      },
      "processes": {
        "measurement": [
          {
            "name": "running",
            "rename": "PROCESSES_RUNNING",
            "unit": "Count"
          },
          {
            "name": "sleeping",
            "rename": "PROCESSES_SLEEPING",
            "unit": "Count"
          },
          {
            "name": "dead",
            "rename": "PROCESSES_DEAD",
            "unit": "Count"
          }
        ],
        "metrics_collection_interval": 60
      }
    },
    "force_flush_interval": 15
  },
  "logs": {
    "logs_collected": {
      "files": {
        "collect_list": [
          {
            "file_path": "/var/log/application/java-microservice.log",
            "log_group_name": "/aws/ec2/java-microservice/application",
            "log_stream_name": "{instance_id}-application",
            "timezone": "UTC",
            "timestamp_format": "%Y-%m-%d %H:%M:%S",
            "multi_line_start_pattern": "^\\d{4}-\\d{2}-\\d{2}",
            "retention_in_days": 30
          },
          {
            "file_path": "/var/log/cloud-init-output.log",
            "log_group_name": "/aws/ec2/java-microservice/cloud-init",
            "log_stream_name": "{instance_id}-cloud-init",
            "timezone": "UTC"
          },
          {
            "file_path": "/var/log/amazon/ssm/amazon-ssm-agent.log",
            "log_group_name": "/aws/ec2/java-microservice/ssm-agent",
            "log_stream_name": "{instance_id}-ssm-agent",
            "timezone": "UTC"
          },
          {
            "file_path": "/var/log/docker/java-microservice/*.log",
            "log_group_name": "/aws/containerinsights/java-microservice-eks/application",
            "log_stream_name": "{instance_id}/java-microservice",
            "timezone": "UTC",
            "timestamp_format": "%Y-%m-%dT%H:%M:%S.%fZ",
            "multi_line_start_pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}"
          }
        ]
      },
      "windows_events": {
        "collect_list": []
      }
    },
    "log_stream_name": "{instance_id}",
    "force_flush_interval": 15
  },
  "csm": {
    "memory_limit_in_mb": 20,
    "port": 31000,
    "enabled": false
  }
}