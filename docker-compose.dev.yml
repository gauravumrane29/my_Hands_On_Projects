version: '3.8'

# Development override configuration
services:
  postgres:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: demoapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Mount SQL files for easier database initialization
      - ./database/init:/docker-entrypoint-initdb.d

  backend:
    build:
      context: ./app
      dockerfile: Dockerfile
      target: builder  # Stop at builder stage for development
    environment:
      - SPRING_PROFILES_ACTIVE=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=demoapp
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - JAVA_OPTS=-Xmx512m -Xms256m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    volumes:
      - ./app:/app
      - ./app/logs:/app/logs
      - maven_cache:/root/.m2
    command: >
      sh -c "mvn spring-boot:run 
      -Dspring-boot.run.jvmArguments='-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_HOST=localhost
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  # Database admin tool for development
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - app-network
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_dev_data:
  maven_cache:
  pgadmin_data: